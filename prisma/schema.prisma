generator client {
    provider = "prisma-client-py"
    interface = "asyncio"
    recursive_type_depth = -1
}

datasource db {
  provider = "mongodb"
  url      = "mongodb+srv://yatochka:bsm4pROS9KjzuxdR@fainodevdb.bghgmn9.mongodb.net/FainoDevDB?retryWrites=true&w=majority"
}



// This model represents a discord guild

model Guild {
    snowflake String @id @map("_id")
    members   Member[]
    language Language @default(en)

    settings GuildSettings?
}


// This model represents discord's user

model User {
    snowflake String @id @map("_id") 
    members   Member[] 
} 

// This model represents a member of a guild, like user, but inside of a guild
 
model Member {
    // region Connecting
    id String @id @default(auto()) @map("_id") @db.ObjectId
    user   User  @relation(fields: [userId], references: [snowflake])
    userId String 
    guild   Guild  @relation(fields: [guildId], references: [snowflake])
    guildId String 
    // endregion

    // region Money
    money Int @default(0)
    bank  Int @default(0) 
    // endregion



}

model GuildSettings {
    // region Connecting
    guild   Guild  @relation(fields: [guildId], references: [snowflake], onDelete: Cascade)
    guildId String @id @map("_id")
    // endregion

    // region messages
    // is Enabled?
    messageMoneyEnabled Boolean @default(true)
    // Amount
    messageMoneyAmountType MoneyAmountType @default(fixed)
    messageFixedMoneyAmount Int @default(10)
    messageMinMoneyAmount Int @default(1)
    messageMaxMoneyAmount Int @default(5)
    // cooldown - seconds
    messageMoneyCooldown Int @default(60)

    // endregion

    // region voice
    // is Enabled?
    voiceMoneyEnabled Boolean @default(true)
    // Amount
    voiceMoneyAmountType MoneyAmountType @default(fixed)
    voiceFixedMoneyAmount Int @default(10)
    voiceMinMoneyAmount Int @default(1)
    voiceMaxMoneyAmount Int @default(5)
    // cooldown - seconds
    voiceMoneyCooldown Int @default(60)

    // endregion

    // region reaction
    // is Enabled?
    reactionMoneyEnabled Boolean @default(true)
    // Amount
    reactionMoneyAmountType MoneyAmountType @default(fixed)
    reactionFixedMoneyAmount Int @default(10)
    reactionMinMoneyAmount Int @default(1)
    reactionMaxMoneyAmount Int @default(5)
    // cooldown - seconds
    reactionMoneyCooldown Int @default(60)
    
    // endregion
} 

enum Language {
    uk
    en 
    ru
}

enum MoneyAmountType {
    fixed
    random
}